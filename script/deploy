#!/usr/bin/env bash

set -e

# Should not require user input if already logged in
docker login

cd "$(dirname "$0")/.."

DIR="$1"
GITTAG="$(git rev-parse HEAD)"

find_dirs() {
    local find_opts
    find_opts=(
        "."
        -type d
        -not -name '.*'         # Exclude dot files
        -not -path "**/.*"      # Exclude dot dirs
        -not -path "./script"
    )

    find "${find_opts[@]}"
}

build_image() {
    pushd "$1" > /dev/null

    if [[ -f Dockerfile ]]; then
        # Tag with VERSION file if present, otherwise fall back to git hash
        if [[ -f VERSION ]]; then
            TAG="$(cat VERSION)"
        else
            TAG="$GITTAG"
        fi

        # sed removes everything after the first /
        # e.g. rust-ubuntu/base-runtime -> rust-ubuntu
        REPO="$(echo $1 | sed 's|/.*||')"
        IMAGE="osig/$REPO:$TAG"
        echo "$IMAGE"
        docker build -t "$IMAGE" .

        if [[ -z $SKIP_DOCKER_PUSH ]]; then
          docker push "$IMAGE"
        fi
    fi

    popd > /dev/null
}

if [[ "$#" = 1 ]]; then
    build_image $1
else
    # sed removes leading './'
    for DIR in $(find_dirs | sed 's|./||')
    do
        build_image "$DIR"
    done
fi
